var $iA2ta$react = require("react");

function $parcel$defineInteropFlag(a) {
  Object.defineProperty(a, '__esModule', {value: true, configurable: true});
}
function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}

$parcel$defineInteropFlag(module.exports);

$parcel$export(module.exports, "default", () => $0bc9252b1402e312$export$2e2bcd8739ae039, (v) => $0bc9252b1402e312$export$2e2bcd8739ae039 = v);


var $0bc9252b1402e312$var$__rest = undefined && undefined.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") {
        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
/** An iframe that takes a skeleton as a prop and renders the skeleton until the iframe is ready */ const $0bc9252b1402e312$var$LoadingIframe = (props)=>{
    const { skeleton: skeleton , className: className  } = props, iframeProps = $0bc9252b1402e312$var$__rest(props, [
        "skeleton",
        "className"
    ]);
    const [iframeLoading, setIframeLoading] = (0, $iA2ta$react.useState)(true);
    if (!skeleton) console.warn("react-loading-iframe: Rendered without skeleton, consider using an html iframe");
    return /*#__PURE__*/ $iA2ta$react.createElement((0, $iA2ta$react.Fragment), null, iframeLoading && skeleton, /*#__PURE__*/ $iA2ta$react.createElement("iframe", Object.assign({
        className: className
    }, iframeProps, {
        style: {
            display: iframeLoading ? "none" : "block",
            height: "100%",
            width: "100%"
        },
        onLoad: ()=>{
            setIframeLoading(false);
        }
    })));
};
var $0bc9252b1402e312$export$2e2bcd8739ae039 = $0bc9252b1402e312$var$LoadingIframe;


//# sourceMappingURL=main.js.map
